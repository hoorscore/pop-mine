import 'package:flutter/material.dart';
import 'package:intl/intl.dart'; // To format the date

class AdminPrivacyPolicyPage extends StatefulWidget {
  @override
  _AdminPrivacyPolicyPageState createState() => _AdminPrivacyPolicyPageState();
}

class _AdminPrivacyPolicyPageState extends State<AdminPrivacyPolicyPage> {
  TextEditingController _policyController = TextEditingController();
  String _lastUpdatedDate = ""; // Variable to hold the last updated date

  @override
  void initState() {
    super.initState();
    _policyController.text = "هنا يمكنك تعديل سياسة الخصوصية...";

    // Initialize the last updated date when the page is first created
    _lastUpdatedDate = DateFormat('yyyy-MM-dd HH:mm:ss').format(DateTime.now());
  }

  // Method to update the date when the policy text is updated
  void _updatePolicyText() {
    setState(() {
      // Update the last updated date to the current time
      _lastUpdatedDate = DateFormat('yyyy-MM-dd HH:mm:ss').format(DateTime.now());
    });
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      body: Stack(
        children: [
          // Background Image
          Container(
            decoration: BoxDecoration(
              image: DecorationImage(
                image: AssetImage("assets/img44.jpg"), // Ensure this path is correct
                fit: BoxFit.cover,
              ),
            ),
          ),
          Column(
            crossAxisAlignment: CrossAxisAlignment.center,
            children: [
              // Header with Back Button
              Padding(
                padding: const EdgeInsets.only(top: 50, left: 15, right: 15),
                child: Row(
                  children: [
                    IconButton(
                      icon: Icon(Icons.arrow_back, color: Colors.white, size: 30),
                      onPressed: () => Navigator.pop(context),
                    ),
                    Spacer(),
                    Text(
                      "تعديل سياسة الخصوصية",
                      style: TextStyle(fontSize: 24, color: Colors.white, fontWeight: FontWeight.bold),
                    ),
                  ],
                ),
              ),

              SizedBox(height: 20),

              // Privacy Policy Editor
              Expanded(
                child: Padding(
                  padding: EdgeInsets.symmetric(horizontal: 20),
                  child: Container(
                    padding: EdgeInsets.all(15),
                    decoration: BoxDecoration(
                      color: Colors.white.withOpacity(0.9),
                      borderRadius: BorderRadius.circular(10),
                    ),
                    child: Column(
                      crossAxisAlignment: CrossAxisAlignment.start,
                      children: [
                        // Last Updated Date (in bold)
                        Text(
                          "آخر تحديث: $_lastUpdatedDate",
                          style: TextStyle(
                            fontWeight: FontWeight.bold,
                            fontSize: 16,
                            color: Colors.black,
                          ),
                        ),
                        SizedBox(height: 10), // Space between date and policy text

                        // Privacy Policy TextField
                        TextField(
                          controller: _policyController,
                          maxLines: null,
                          keyboardType: TextInputType.multiline,
                          style: TextStyle(fontSize: 16, color: Colors.black),
                          decoration: InputDecoration(
                            border: InputBorder.none,
                            hintText: "أدخل سياسة الخصوصية هنا...",
                          ),
                          onChanged: (text) {
                            // Update the last updated date whenever the text changes
                            _updatePolicyText();
                          },
                        ),
                      ],
                    ),
                  ),
                ),
              ),

              SizedBox(height: 20),

              // Save Button
              Padding(
                padding: const EdgeInsets.symmetric(horizontal: 20),
                child: ElevatedButton(
                  onPressed: () {
                    ScaffoldMessenger.of(context).showSnackBar(
                      SnackBar(content: Text("تم حفظ التعديلات")),
                    );
                  },
                  style: ElevatedButton.styleFrom(
                    backgroundColor: Colors.amber,
                    minimumSize: Size(double.infinity, 50),
                    shape: RoundedRectangleBorder(
                      borderRadius: BorderRadius.circular(10),
                    ),
                  ),
                  child: Text("حفظ التعديلات", style: TextStyle(fontSize: 18, color: Colors.white)),
                ),
              ),

              SizedBox(height: 20),
            ],
          ),
        ],
      ),

      // Bottom Navigation Bar
      bottomNavigationBar: BottomNavigationBar(
        type: BottomNavigationBarType.fixed,
        backgroundColor: Colors.amber,
        selectedItemColor: Colors.white,
        unselectedItemColor: Colors.white70,
        currentIndex: 3, // Settings icon selected
        onTap: (index) {
          // Handle navigation if needed
        },
        items: [
          BottomNavigationBarItem(icon: Icon(Icons.home, color: Colors.white), label: ""),
          BottomNavigationBarItem(icon: Icon(Icons.checklist, color: Colors.white), label: ""),
          BottomNavigationBarItem(icon: Icon(Icons.person, color: Colors.white), label: ""),
          BottomNavigationBarItem(icon: Icon(Icons.settings, color: Colors.blue), label: ""),
        ],
      ),
    );
  }
}
